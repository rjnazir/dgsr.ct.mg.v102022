<?php

namespace Proxies\__CG__\Ct\Service\MetierManagerBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CtConstAvDed extends \Ct\Service\MetierManagerBundle\Entity\CtConstAvDed implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'id', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadImmatriculation', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadProvenance', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadDateEmbarquement', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadLieuEmbarquement', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadDivers', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadProprietaireNom', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadProprietaireAdresse', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadBonEtat', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadConforme', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadSecPers', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadSecMarch', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadProtecEnv', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadNumero', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'ctCentre', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'ctVerificateur', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadCreated', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'ctConstAvDedCaracs', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadObservation'];
        }

        return ['__isInitialized__', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'id', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadImmatriculation', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadProvenance', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadDateEmbarquement', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadLieuEmbarquement', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadDivers', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadProprietaireNom', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadProprietaireAdresse', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadBonEtat', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadConforme', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadSecPers', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadSecMarch', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadProtecEnv', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadNumero', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'ctCentre', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'ctVerificateur', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadCreated', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'ctConstAvDedCaracs', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtConstAvDed' . "\0" . 'cadObservation'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CtConstAvDed $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadProvenance($cadProvenance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadProvenance', [$cadProvenance]);

        return parent::setCadProvenance($cadProvenance);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadProvenance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadProvenance', []);

        return parent::getCadProvenance();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadDivers($cadDivers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadDivers', [$cadDivers]);

        return parent::setCadDivers($cadDivers);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadDivers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadDivers', []);

        return parent::getCadDivers();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadProprietaireNom($cadProprietaireNom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadProprietaireNom', [$cadProprietaireNom]);

        return parent::setCadProprietaireNom($cadProprietaireNom);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadProprietaireNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadProprietaireNom', []);

        return parent::getCadProprietaireNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadProprietaireAdresse($cadProprietaireAdresse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadProprietaireAdresse', [$cadProprietaireAdresse]);

        return parent::setCadProprietaireAdresse($cadProprietaireAdresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadProprietaireAdresse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadProprietaireAdresse', []);

        return parent::getCadProprietaireAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadBonEtat($cadBonEtat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadBonEtat', [$cadBonEtat]);

        return parent::setCadBonEtat($cadBonEtat);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadBonEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadBonEtat', []);

        return parent::getCadBonEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadSecPers($cadSecPers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadSecPers', [$cadSecPers]);

        return parent::setCadSecPers($cadSecPers);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadSecPers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadSecPers', []);

        return parent::getCadSecPers();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadSecMarch($cadSecMarch)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadSecMarch', [$cadSecMarch]);

        return parent::setCadSecMarch($cadSecMarch);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadSecMarch()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadSecMarch', []);

        return parent::getCadSecMarch();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadNumero($cadNumero)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadNumero', [$cadNumero]);

        return parent::setCadNumero($cadNumero);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadNumero()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadNumero', []);

        return parent::getCadNumero();
    }

    /**
     * {@inheritDoc}
     */
    public function setCtCentre(\Ct\Service\MetierManagerBundle\Entity\CtCentre $ctCentre = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCtCentre', [$ctCentre]);

        return parent::setCtCentre($ctCentre);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtCentre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtCentre', []);

        return parent::getCtCentre();
    }

    /**
     * {@inheritDoc}
     */
    public function setCtVerificateur(\Ct\Service\UserBundle\Entity\User $ctVerificateur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCtVerificateur', [$ctVerificateur]);

        return parent::setCtVerificateur($ctVerificateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtVerificateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtVerificateur', []);

        return parent::getCtVerificateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadImmatriculation($cadImmatriculation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadImmatriculation', [$cadImmatriculation]);

        return parent::setCadImmatriculation($cadImmatriculation);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadImmatriculation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadImmatriculation', []);

        return parent::getCadImmatriculation();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadDateEmbarquement($cadDateEmbarquement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadDateEmbarquement', [$cadDateEmbarquement]);

        return parent::setCadDateEmbarquement($cadDateEmbarquement);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadDateEmbarquement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadDateEmbarquement', []);

        return parent::getCadDateEmbarquement();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadLieuEmbarquement($cadLieuEmbarquement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadLieuEmbarquement', [$cadLieuEmbarquement]);

        return parent::setCadLieuEmbarquement($cadLieuEmbarquement);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadLieuEmbarquement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadLieuEmbarquement', []);

        return parent::getCadLieuEmbarquement();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadCreated($cadCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadCreated', [$cadCreated]);

        return parent::setCadCreated($cadCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadCreated', []);

        return parent::getCadCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function addCtConstAvDedCarac(\Ct\Service\MetierManagerBundle\Entity\CtConstAvDedCarac $ctConstAvDedCarac)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCtConstAvDedCarac', [$ctConstAvDedCarac]);

        return parent::addCtConstAvDedCarac($ctConstAvDedCarac);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCtConstAvDedCarac(\Ct\Service\MetierManagerBundle\Entity\CtConstAvDedCarac $ctConstAvDedCarac)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCtConstAvDedCarac', [$ctConstAvDedCarac]);

        return parent::removeCtConstAvDedCarac($ctConstAvDedCarac);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtConstAvDedCaracs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtConstAvDedCaracs', []);

        return parent::getCtConstAvDedCaracs();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadConforme($cadConforme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadConforme', [$cadConforme]);

        return parent::setCadConforme($cadConforme);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadConforme()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadConforme', []);

        return parent::getCadConforme();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadProtecEnv($cadProtecEnv)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadProtecEnv', [$cadProtecEnv]);

        return parent::setCadProtecEnv($cadProtecEnv);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadProtecEnv()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadProtecEnv', []);

        return parent::getCadProtecEnv();
    }

    /**
     * {@inheritDoc}
     */
    public function setCadObservation($cadObservation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCadObservation', [$cadObservation]);

        return parent::setCadObservation($cadObservation);
    }

    /**
     * {@inheritDoc}
     */
    public function getCadObservation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCadObservation', []);

        return parent::getCadObservation();
    }

}
