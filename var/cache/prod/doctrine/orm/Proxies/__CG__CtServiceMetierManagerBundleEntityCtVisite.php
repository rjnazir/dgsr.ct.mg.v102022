<?php

namespace Proxies\__CG__\Ct\Service\MetierManagerBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CtVisite extends \Ct\Service\MetierManagerBundle\Entity\CtVisite implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'id', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstNumPv', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstNumFeuilleCaisse', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstDureeReparation', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstIsApte', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstIsContreVisite', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstDateExpiration', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstCreated', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstUpdated', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctCarteGrise', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctCentre', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctTypeVisite', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctUsage', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctUser', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctVerificateur', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctAnomalie', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctVisiteExtra', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctUtilisation'];
        }

        return ['__isInitialized__', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'id', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstNumPv', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstNumFeuilleCaisse', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstDureeReparation', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstIsApte', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstIsContreVisite', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstDateExpiration', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstCreated', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'vstUpdated', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctCarteGrise', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctCentre', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctTypeVisite', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctUsage', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctUser', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctVerificateur', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctAnomalie', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctVisiteExtra', '' . "\0" . 'Ct\\Service\\MetierManagerBundle\\Entity\\CtVisite' . "\0" . 'ctUtilisation'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CtVisite $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setVstNumPv($vstNumPv)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVstNumPv', [$vstNumPv]);

        return parent::setVstNumPv($vstNumPv);
    }

    /**
     * {@inheritDoc}
     */
    public function getVstNumPv()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVstNumPv', []);

        return parent::getVstNumPv();
    }

    /**
     * {@inheritDoc}
     */
    public function setVstNumFeuilleCaisse($vstNumFeuilleCaisse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVstNumFeuilleCaisse', [$vstNumFeuilleCaisse]);

        return parent::setVstNumFeuilleCaisse($vstNumFeuilleCaisse);
    }

    /**
     * {@inheritDoc}
     */
    public function getVstNumFeuilleCaisse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVstNumFeuilleCaisse', []);

        return parent::getVstNumFeuilleCaisse();
    }

    /**
     * {@inheritDoc}
     */
    public function setVstDateExpiration($vstDateExpiration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVstDateExpiration', [$vstDateExpiration]);

        return parent::setVstDateExpiration($vstDateExpiration);
    }

    /**
     * {@inheritDoc}
     */
    public function getVstDateExpiration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVstDateExpiration', []);

        return parent::getVstDateExpiration();
    }

    /**
     * {@inheritDoc}
     */
    public function setVstCreated($vstCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVstCreated', [$vstCreated]);

        return parent::setVstCreated($vstCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getVstCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVstCreated', []);

        return parent::getVstCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setVstUpdated($vstUpdated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVstUpdated', [$vstUpdated]);

        return parent::setVstUpdated($vstUpdated);
    }

    /**
     * {@inheritDoc}
     */
    public function getVstUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVstUpdated', []);

        return parent::getVstUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCtCarteGrise(\Ct\Service\MetierManagerBundle\Entity\CtCarteGrise $ctCarteGrise = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCtCarteGrise', [$ctCarteGrise]);

        return parent::setCtCarteGrise($ctCarteGrise);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtCarteGrise()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtCarteGrise', []);

        return parent::getCtCarteGrise();
    }

    /**
     * {@inheritDoc}
     */
    public function setCtCentre(\Ct\Service\MetierManagerBundle\Entity\CtCentre $ctCentre = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCtCentre', [$ctCentre]);

        return parent::setCtCentre($ctCentre);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtCentre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtCentre', []);

        return parent::getCtCentre();
    }

    /**
     * {@inheritDoc}
     */
    public function setCtTypeVisite(\Ct\Service\MetierManagerBundle\Entity\CtTypeVisite $ctTypeVisite = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCtTypeVisite', [$ctTypeVisite]);

        return parent::setCtTypeVisite($ctTypeVisite);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtTypeVisite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtTypeVisite', []);

        return parent::getCtTypeVisite();
    }

    /**
     * {@inheritDoc}
     */
    public function setCtUsage(\Ct\Service\MetierManagerBundle\Entity\CtUsage $ctUsage = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCtUsage', [$ctUsage]);

        return parent::setCtUsage($ctUsage);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtUsage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtUsage', []);

        return parent::getCtUsage();
    }

    /**
     * {@inheritDoc}
     */
    public function setCtUser(\Ct\Service\UserBundle\Entity\User $ctUser = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCtUser', [$ctUser]);

        return parent::setCtUser($ctUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtUser', []);

        return parent::getCtUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setCtVerificateur(\Ct\Service\UserBundle\Entity\User $ctVerificateur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCtVerificateur', [$ctVerificateur]);

        return parent::setCtVerificateur($ctVerificateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtVerificateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtVerificateur', []);

        return parent::getCtVerificateur();
    }

    /**
     * {@inheritDoc}
     */
    public function addCtAnomalie(\Ct\Service\MetierManagerBundle\Entity\CtAnomalie $ctAnomalie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCtAnomalie', [$ctAnomalie]);

        return parent::addCtAnomalie($ctAnomalie);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCtAnomalie(\Ct\Service\MetierManagerBundle\Entity\CtAnomalie $ctAnomalie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCtAnomalie', [$ctAnomalie]);

        return parent::removeCtAnomalie($ctAnomalie);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtAnomalie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtAnomalie', []);

        return parent::getCtAnomalie();
    }

    /**
     * {@inheritDoc}
     */
    public function addCtVisiteExtra(\Ct\Service\MetierManagerBundle\Entity\CtVisiteExtra $ctVisiteExtra)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCtVisiteExtra', [$ctVisiteExtra]);

        return parent::addCtVisiteExtra($ctVisiteExtra);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCtVisiteExtra(\Ct\Service\MetierManagerBundle\Entity\CtVisiteExtra $ctVisiteExtra)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCtVisiteExtra', [$ctVisiteExtra]);

        return parent::removeCtVisiteExtra($ctVisiteExtra);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtVisiteExtra()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtVisiteExtra', []);

        return parent::getCtVisiteExtra();
    }

    /**
     * {@inheritDoc}
     */
    public function setCtUtilisation(\Ct\Service\MetierManagerBundle\Entity\CtUtilisation $ctUtilisation = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCtUtilisation', [$ctUtilisation]);

        return parent::setCtUtilisation($ctUtilisation);
    }

    /**
     * {@inheritDoc}
     */
    public function getCtUtilisation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCtUtilisation', []);

        return parent::getCtUtilisation();
    }

    /**
     * {@inheritDoc}
     */
    public function setVstIsApte($vstIsApte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVstIsApte', [$vstIsApte]);

        return parent::setVstIsApte($vstIsApte);
    }

    /**
     * {@inheritDoc}
     */
    public function getVstIsApte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVstIsApte', []);

        return parent::getVstIsApte();
    }

    /**
     * {@inheritDoc}
     */
    public function setVstIsContreVisite($vstIsContreVisite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVstIsContreVisite', [$vstIsContreVisite]);

        return parent::setVstIsContreVisite($vstIsContreVisite);
    }

    /**
     * {@inheritDoc}
     */
    public function getVstIsContreVisite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVstIsContreVisite', []);

        return parent::getVstIsContreVisite();
    }

    /**
     * {@inheritDoc}
     */
    public function setVstDureeReparation($vstDureeReparation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVstDureeReparation', [$vstDureeReparation]);

        return parent::setVstDureeReparation($vstDureeReparation);
    }

    /**
     * {@inheritDoc}
     */
    public function getVstDureeReparation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVstDureeReparation', []);

        return parent::getVstDureeReparation();
    }

}
